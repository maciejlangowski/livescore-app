{"version":3,"sources":["components/MenuItems.js","components/MenuList.js","logo/Logo.js","components/Welcome.js","components/Livescores.js","components/Scores.js","components/Teams.js","components/MyTeams.js","components/SignInEmail.js","components/SignInGoogleFacebook.js","components/SignIn.js","components/SignInButton.js","components/MainSection.js","App.js","serviceWorker.js","index.js","components/styles.module.css","logo/logos.png"],"names":["MenuItems","item","Icon","icon","ListItem","button","key","name","className","styles","navLink","exact","activeClassName","to","url","ListItemIcon","fontSize","entries","HomeIcon","AlarmIcon","SportsSoccerIcon","FlagIcon","FavoriteBorderOutlinedIcon","MenuList","Fragment","Divider","List","map","Logo","style","height","src","logos","alt","Welcome","Livescores","React","Component","Scores","Teams","MyTeams","SignInEmail","state","email","password","redirect","handleOnChange","event","setState","target","value","handleOnSubmit","preventDefault","props","isSignUp","firebase","auth","createUserWithEmailAndPassword","then","userData","console","log","catch","error","code","alert","message","signInWithEmailAndPassword","this","Container","component","maxWidth","loginHeader","noValidate","onSubmit","TextField","variant","margin","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","Button","color","Grid","container","href","SignInGoogle","isSignedIn","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","callbacks","signInSuccess","componentDidMount","onAuthStateChanged","user","firebaseAuth","SignIn","SignInGoogleFacebook","SignInButton","handleOnSignOut","signOut","unsubscribe","userDiv","loggedUser","currentUser","displayName","onClick","NavLink","useStyles","makeStyles","theme","root","display","paddingTop","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MainSection","classes","useTheme","useState","open","setOpen","Hidden","xlUp","smDown","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","header","signInShareButtons","Drawer","paper","direction","path","createMuiTheme","palette","primary","light","main","dark","secondary","typography","fontFamily","join","App","Boolean","window","location","hostname","match","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DATABASE_URL","initializeApp","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e51d8b8b.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { NavLink } from \"react-router-dom\";\nimport styles from './styles.module.css';\n\nexport default function MenuItems({item}) {\n    const Icon = item.icon\n    return (\n        <ListItem button key={item.name}>   \n            <NavLink className={styles.navLink} exact activeClassName=\"active-nav\" to={item.url} >\n                <ListItemIcon>\n                    <Icon fontSize=\"large\" />\n                </ListItemIcon>\n                {item.name}\n            </NavLink>\n        </ListItem>\n    )\n}  ","import React from 'react';\nimport MenuItems from './MenuItems'\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport HomeIcon from '@material-ui/icons/Home';\nimport FavoriteBorderOutlinedIcon from '@material-ui/icons/FavoriteBorderOutlined';\nimport SportsSoccerIcon from '@material-ui/icons/SportsSoccer';\nimport AlarmIcon from '@material-ui/icons/Alarm';\nimport FlagIcon from '@material-ui/icons/Flag';\n\nconst entries = [\n    {\n        name: 'Home',\n        icon: HomeIcon,\n        url: \"/\"\n    },\n    {\n        name: 'Livescores',\n        icon: AlarmIcon,\n        url: \"/livescores\"\n    },\n    {\n        name: 'Scores',\n        icon: SportsSoccerIcon,\n        url: \"/scores\"\n    },\n    {\n        name: 'Teams',\n        icon: FlagIcon,\n        url: \"/teams\"\n    },\n    {\n        name: 'My Teams',\n        icon: FavoriteBorderOutlinedIcon,\n        url: \"/myteams\"\n    }\n]\n\nexport default function MenuList() {\n    return (\n        <React.Fragment>\n            <Divider />\n            <List>\n                {entries.map((item) => (\n                    <MenuItems key={item.url} item={item} />\n                ))}\n            </List>\n        </React.Fragment>\n    )\n}","import React from 'react';\n// import logo from './logo.png'\nimport logos from './logos.png'\n\nexport default function Logo() {\n  \n  return <img \n  style={{height: \"2.5rem\"}}\n  src={logos} alt=\"Logo\" \n  />;\n}","import React from 'react';\n\nconst Welcome = () => {\n    return (\n        <div>Welcome</div>\n    )\n}\n\nexport default Welcome;","import React from 'react';\n\nclass Livescores extends React.Component {\n    render() {\n        return (\n            <div>Livescores</div>\n        )\n    }\n}\n\nexport default Livescores;","import React from 'react';\n\nclass Scores extends React.Component {\n    render() {\n        return (\n            <div>Scores</div>\n        )\n    }\n}\n\nexport default Scores;","import React from 'react';\n\nclass Teams extends React.Component {\n    render() {\n        return (\n            <div>Teams</div>\n        )\n    }\n}\n\nexport default Teams;","import React from 'react';\n\nclass MyTeams extends React.Component {\n    render() {\n        return (\n            <div>My Teams</div>\n        )\n    }\n}\n\nexport default MyTeams;","import React from 'react';\nimport { Redirect, Link} from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport firebase from 'firebase';\nimport styles from './styles.module.css';\n\n\nclass SignInEmail extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        redirect: false\n    }\n\n    handleOnChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault();\n\n        if (this.props.isSignUp) {\n            firebase.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\n                .then((userData) => {\n                    this.setState({\n                        redirect: true\n                    })\n                    console.log(userData)\n                })\n                .catch((error) => {\n                    if(error.code === \"auth/weak-password\") {\n                        alert(\"Podane hasło jest za krótkie - musi się ono składać z minimum 6 znaków.\")\n                    } else if (error.code === \"auth/invalid-email\") {\n                        alert(\"Podano błędny adres e-mail.\")\n                    } else {\n                        alert(error.message)\n                    }\n\n                })\n        } else {\n            firebase.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\n                .then((userData) => {\n                    this.setState({\n                        redirect: true\n                    })\n                    console.log(userData)\n                })\n                .catch((error) => {\n                    if(error.code === \"auth/user-not-found\") {\n                        alert(\"This user doesn't exist. If you want to log in - please sign up first.\")\n                    } else if (error.code === \"auth/wrong-password\") {\n                        alert(\"This password is wrong.\")\n                    } else if (error.code === \"auth/invalid-email\") {\n                        alert(\"This email address is wrong.\")\n                    } else {\n                        alert(error.message)\n                    }\n            \n                })\n        }\n    }\n    \n    render() {\n        if(this.state.redirect) {\n            return <Redirect to=\"/\" />\n        }\n\n        return (\n            <Container component=\"main\" maxWidth=\"xs\">\n                <h1 className={styles.loginHeader}>\n                    {\n                        this.props.isSignUp\n                        ? \"Sign Up\"\n                        : \"Sign In\"\n                    }\n                </h1>\n                    <form noValidate onSubmit={this.handleOnSubmit}>\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                            onChange={this.handleOnChange}\n                            value={this.state.email}\n                        />\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                            onChange={this.handleOnChange}\n                            value={this.state.password}\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                        >\n                            {this.props.isSignUp ? \"Sign Up\" : \"Sign In\"}\n                            \n                        </Button>\n                        <Grid container>\n                                <Link href=\"#\" variant=\"body2\">\n                                    {\n                                        this.props.isSignUp\n                                        ? <Link to='/signin'>Already have an account? Sign In! </Link>\n                                        : <Link to='/signup'>Don't have an account yet? Sign Up! </Link>\n                                    }\n                                </Link>\n                        \n                        </Grid>\n                    </form>\n                </Container>\n            \n        )\n    }\n}\n\nexport default SignInEmail;\n\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport firebase from 'firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nclass SignInGoogle extends React.Component {\n    state = {\n        isSignedIn: false,\n    }\n\n    uiConfig = {\n        signInFlow: \"popup\",\n        signInOptions: [\n            firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n            firebase.auth.FacebookAuthProvider.PROVIDER_ID,\n        \n        ],\n        callbacks: {\n            signInSuccess: () => false\n        }\n    }\n    \n    componentDidMount = () => {\n        firebase.auth().onAuthStateChanged(user => {\n          this.setState({ isSignedIn: !!user })\n        })\n      }\n\n    render() {\n        return (\n            <div>\n                {\n                    this.state.isSignedIn \n                    ? <Redirect to=\"/\" /> \n                    : (\n                        <StyledFirebaseAuth\n                            uiConfig={this.uiConfig}\n                            firebaseAuth={firebase.auth()}\n                        />\n                        \n                    )\n                }\n            </div>\n        )\n    }\n}\n\nexport default SignInGoogle;","import React from 'react';\nimport SignInEmail from './SignInEmail'\nimport SignInGoogleFacebook from './SignInGoogleFacebook';\n\n\nclass SignIn extends React.Component {\n    render() {\n        return (\n            <div>\n                <SignInEmail />\n                <hr />\n                <SignInGoogleFacebook />\n            </div>\n        )\n    }\n}\n\nexport default SignIn;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { NavLink } from 'react-router-dom';\nimport firebase from 'firebase';\nimport styles from './styles.module.css';\n\nclass SignInButton extends React.Component {\n    state = {\n        user: null\n    }\n\n    handleOnSignOut = () => {\n        firebase.auth().signOut();\n    }\n\n    componentDidMount() {\n        const unsubscribe = firebase.auth().onAuthStateChanged(user => {\n            this.setState({\n                user\n            })\n        })\n        this.setState({\n            unsubscribe\n        })\n    }\n\n    componentWillUnmount() {\n        this.state.unsubscribe();\n    }\n\n    render() {\n        return (\n            <div className={styles.userDiv}>\n                <div className={styles.loggedUser}>\n                    {\n                        this.state.user &&`Hello, ${firebase.auth().currentUser.displayName}.`\n                    }\n                </div>\n                \n                {\n                    this.state.user\n                        ? <Button color='default' variant='contained' onClick={this.handleOnSignOut} >Sign Out</Button>\n                        : <Button color='default' variant='contained' component={NavLink} to='/signin'>Sign In</Button>\n                }\n\n            </div>\n        )\n    }\n}\n\nexport default SignInButton;","import React from \"react\";\nimport clsx from \"clsx\";\nimport MenuList from \"./MenuList\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Hidden from '@material-ui/core/Hidden';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from '@material-ui/core/Button';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport Logo from '../logo/Logo';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport styles from './styles.module.css';\n\nimport Welcome from './Welcome';\nimport Livescores from './Livescores';\nimport Scores from './Scores';\nimport Teams from './Teams';\nimport MyTeams from './MyTeams';\nimport SignIn from './SignIn';\nimport SignInButton from './SignInButton'\nimport SignInEmail from './SignInEmail';\n\nconst drawerWidth = 300\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingTop: 0,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n  content: {\n    flexGrow: 1,\n    // padding: theme.spacing(4),\n  },\n}))\n\nexport default function MainSection() {\n  const classes = useStyles()\n  const theme = useTheme()\n  const [open, setOpen] = React.useState(false)\n\n  const handleDrawerOpen = () => {\n    setOpen(true)\n  }\n\n  const handleDrawerClose = () => {\n    setOpen(false)\n  }\n\n  return (\n    <BrowserRouter>\n      <Hidden xlUp>\n        <Button>IKONA</Button>\n\n      </Hidden>\n      <div className={classes.root}>\n        <Hidden smDown>\n          <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}>\n            <Toolbar>\n              <IconButton\n                color=\"inherit\"\n                fontSize=\"large\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, {\n                  [classes.hide]: open,\n                })}\n              >\n                <Logo />\n              </IconButton>\n              <div className=\"navContainer\">\n                <div className={styles.header}>Livescore app</div>\n                <div className={styles.signInShareButtons}>\n                    <SignInButton />\n                </div>\n              </div>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            className={clsx(classes.drawer, {\n              [classes.drawerOpen]: open,\n              [classes.drawerClose]: !open,\n            })}\n            classes={{\n              paper: clsx({\n                [classes.drawerOpen]: open,\n                [classes.drawerClose]: !open,\n              }),\n            }}\n          >\n            <div className={classes.toolbar}>\n              <IconButton onClick={handleDrawerClose}>\n                {theme.direction === 'rtl' ? (\n                  <ChevronRightIcon />\n                ) : (\n                    <ChevronLeftIcon />\n                  )}\n              </IconButton>\n            </div>\n            <MenuList />\n          </Drawer>\n        </Hidden>\n        <main className={classes.content}>\n          <div className={classes.toolbar} />\n          <Switch>\n            <Route exact path=\"/\" component={Welcome} />\n            <Route exact path=\"/livescores\" component={Livescores} />\n            <Route exact path=\"/scores\" component={Scores} />\n            <Route exact path=\"/teams\" component={Teams} />\n            <Route exact path=\"/myteams\" component={MyTeams} />\n            \n            <Route path='/signin'  component={SignIn}/>\n            <Route path='/signup' component={() => <SignInEmail isSignUp />} /> \n\n          </Switch>\n        </main>\n      </div>\n    </BrowserRouter>\n  )\n}\n","import React from 'react';\nimport { createMuiTheme, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport MainSection from './components/MainSection'\n\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          light: \"#33FF8A\",\n          main: \"#5A7F10\",\n          dark: \"#33FF8A\",\n  },\n      secondary: {\n          light: \"#c4e34a\",\n          main: \"#68a845\",\n          dark: \"#23763e\",\n  }\n  },\n      typography: {\n          fontFamily: ['Mulish',\"Montserrat\", 'Roboto'].join(',')\n  },\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <MainSection />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBlmCsE-fbM3-NFAvXdkqDp75CxxL9yus0\",\n  authDomain: \"livescore-app-8a845.firebaseapp.com\",\n  databaseURL: \"https://livescore-app-8a845.firebaseio.com\",\n  projectId: \"livescore-app-8a845\",\n  storageBucket: \"livescore-app-8a845.appspot.com\",\n  messagingSenderId: \"897672722687\",\n  appId: \"1:897672722687:web:0b1e1c00136915977b34ca\"\n};\n\nexport const DATABASE_URL = firebaseConfig.databaseURL;\n\nfirebase.initializeApp(firebaseConfig); \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbar\":\"styles_toolbar__2s2SG\",\"navLink\":\"styles_navLink__2VLD0\",\"header\":\"styles_header__1zqbi\",\"signInShareButtons\":\"styles_signInShareButtons__38bF-\",\"loggedUser\":\"styles_loggedUser__2lgid\",\"userDiv\":\"styles_userDiv__e9lKr\"};","module.exports = __webpack_public_path__ + \"static/media/logos.ee690d85.png\";"],"sourceRoot":""}